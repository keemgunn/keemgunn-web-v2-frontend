var t=function(t,e,i,n,o,r,s,a,l,d){"boolean"!=typeof s&&(l=a,a=s,s=!1);var p,u="function"==typeof i?i.options:i;if(t&&t.render&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0,o&&(u.functional=!0)),n&&(u._scopeId=n),r?(p=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,l(t)),t&&t._registeredComponents&&t._registeredComponents.add(r)},u._ssrRegister=p):e&&(p=s?function(){e.call(this,d(this.$root.$options.shadowRoot))}:function(t){e.call(this,a(t))}),p)if(u.functional){var f=u.render;u.render=function(t,e){return p.call(e),f(t,e)}}else{var c=u.beforeCreate;u.beforeCreate=c?[].concat(c,p):[p]}return i}({},void 0,{name:"VueBlotter",props:{autoplay:{type:Boolean,default:!0},checkInViewport:{type:Boolean,default:!0},text:{type:String,default:"Blotter"},family:{type:String,default:"serif"},size:{type:Number,default:120},fill:{type:String,default:"#171717"},textStyle:{type:String,default:"normal"},weight:{type:Number,default:400},padding:{type:Number,default:0},paddingTop:{type:Number,default:0},paddingRight:{type:Number,default:0},paddingBottom:{type:Number,default:0},paddingLeft:{type:Number,default:0},materialType:{type:String,required:!0},uniforms:{type:Object,default:function(){}}},data:function(){return{blotter:{},scope:{},intersecting:null}},mounted:function(){this.initBlotter(),this.checkInViewport&&this.checkIntersection()},beforeDestroy:function(){this.blotter.stop()},watch:{intersecting:function(t){t?this.scope.play():this.scope.pause()}},methods:{initBlotter:function(){if(!this.materialType)throw new Error("Material type prop is required. Refer to https://github.com/arapl3y/vue-blotter#configuration-options");var t=this.setBlotterText({text:this.text,family:this.family,size:this.size,fill:this.fill,textStyle:this.textStyle,weight:this.weight,padding:this.padding,paddingTop:this.paddingTop,paddingRight:this.paddingRight,paddingBottom:this.paddingBottom,paddingLeft:this.paddingLeft}),e=this.setBlotterMaterial(this.materialType);this.uniforms&&0!==Object.keys(this.uniforms).length&&this.setBlotterUniforms(e,this.uniforms),this.blotter=this.renderBlotter(e,t),this.setBlotterScope(this.blotter,t,this.$el)},setBlotterText:function(t){var e=t.text,i=t.textStyle,n=function(t,e){var i={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&-1===e.indexOf(n)&&(i[n]=t[n]);return i}(t,["text","textStyle"]);return new Blotter.Text(e,Object.assign({},{style:i},n))},setBlotterMaterial:function(t){return new Blotter[t]},setBlotterUniforms:function(t,e){for(var i in e)t.uniforms[i].value=e[i]},renderBlotter:function(t,e){return new Blotter(t,{autoplay:this.autoplay,texts:e})},setBlotterScope:function(t,e,i){this.scope=t.forText(e),this.scope.appendTo(i)},pause:function(t){t.pause()},play:function(t){t.play()},checkIntersection:function(){var t=this;new IntersectionObserver(function(e){e.forEach(function(e){e.isIntersecting?t.intersecting=!0:t.intersecting=!1})},{threshold:.3}).observe(this.$el)}},render:function(){return this.$scopedSlots.default({blotterScope:this.scope,intersecting:this.intersecting})}},void 0,void 0,void 0,void 0,void 0);function e(i){e.installed||(e.installed=!0,i.component("VueBlotter",t))}var i={install:e},n=null;"undefined"!=typeof window?n=window.Vue:"undefined"!=typeof global&&(n=global.Vue),n&&n.use(i),t.install=e;export default t;
