{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/btn_darkmode.vue?vue&type=template&id=6a212737","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/btn_darkmode.vue","mtime":1633252600354},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1632469346329},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632469347152},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1632469346062},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1632469346312}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaGVsbG8iPgogICAgPGJ1dHRvbiBAY2xpY2s9InRvZ2dsZURhcmttb2RlIj5kYXJrbW9kZToge3tpc0Rhcmttb2RlT259fSA8L2J1dHRvbj4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/btn_darkmode.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/btn_darkmode.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"hello\">\n    <button @click=\"toggleDarkmode\">darkmode: {{isDarkmodeOn}} </button>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations} from 'vuex';\n\nexport default {\n  name: 'btn_darkmode',\n  props: {\n\n  },\n  computed: {\n    ...mapGetters('ui',[\n      'isDarkmodeOn'\n    ])\n  },\n  methods: {\n    ...mapMutations('ui', {\n      toggleDarkmode: 'toggleDarkmode'\n    }),\n    toggle() {\n      this.toggleDarkmode();\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n\n</style>\n"]}]}