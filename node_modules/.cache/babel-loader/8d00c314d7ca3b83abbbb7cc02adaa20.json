{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","mtime":1633253036217},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1632469346062},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1632469346329},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js","mtime":1632469345994}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGNvbG9ycyBmcm9tICdAL2Fzc2V0cy9zdHlsZXMvY29sb3JzLmpzb24nOyAvLyBEYXJrIE1vZGUgRGV0ZWN0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKdmFyIG1hdGNoZWQgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXM7CnZhciBzdGFydE1vZGUgPSBtYXRjaGVkOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogZmFsc2UsCiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgZGFya21vZGU6IHN0YXJ0TW9kZSwKICAgICAgY29sb3JTb3VyY2U6IGNvbG9ycwogICAgfTsKICB9LAogIGdldHRlcnM6IHsKICAgIGlzRGFya21vZGVPbjogZnVuY3Rpb24gaXNEYXJrbW9kZU9uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYXJrbW9kZTsKICAgIH0sCiAgICBnZXRDb2xvcnM6IGZ1bmN0aW9uIGdldENvbG9ycyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGFya21vZGUgPyBzdGF0ZS5jb2xvclNvdXJjZS5kYXJrIDogc3RhdGUuY29sb3JTb3VyY2UubGlnaHQ7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHRvZ2dsZURhcmttb2RlOiBmdW5jdGlvbiB0b2dnbGVEYXJrbW9kZShzdGF0ZSkgewogICAgICBzdGF0ZS5kYXJrbW9kZSA9ICFzdGF0ZS5kYXJrbW9kZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js"],"names":["colors","matched","window","matchMedia","matches","startMode","namespaced","state","darkmode","colorSource","getters","isDarkmodeOn","getColors","dark","light","mutations","toggleDarkmode"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,6BAAnB,C,CAEA;;AACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAhE;AACA,IAAIC,SAAS,GAAGJ,OAAhB;AAGA,eAAe;AACbK,EAAAA,UAAU,EAAE,KADC;AAGbC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,QAAQ,EAAEH,SADE;AAEZI,MAAAA,WAAW,EAAET;AAFD,KAAP;AAAA,GAHM;AAQbU,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMJ,KADN,EACa;AAClB,aAAOA,KAAK,CAACC,QAAb;AACD,KAHM;AAIPI,IAAAA,SAJO,qBAIGL,KAJH,EAIU;AACf,aAAOA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACE,WAAN,CAAkBI,IAAnC,GAA0CN,KAAK,CAACE,WAAN,CAAkBK,KAAnE;AACD;AANM,GARI;AAiBbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMT,KADN,EACa;AACpBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,CAACD,KAAK,CAACC,QAAxB;AACD;AAHQ;AAjBE,CAAf","sourcesContent":["import colors from '@/assets/styles/colors.json';\n\n// Dark Mode Detection ------------------------\nlet matched = window.matchMedia('(prefers-color-scheme: dark)').matches;\nlet startMode = matched;\n\n\nexport default {\n  namespaced: false,\n  \n  state: () => ({\n    darkmode: startMode,\n    colorSource: colors\n  }),\n\n  getters: {\n    isDarkmodeOn(state) {\n      return state.darkmode\n    },\n    getColors(state) {\n      return state.darkmode ? state.colorSource.dark : state.colorSource.light\n    }\n  },\n\n  mutations: {\n    toggleDarkmode(state) {\n      state.darkmode = !state.darkmode\n    }\n  },\n\n}"]}]}