{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/pages/test/003_ContentImport.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/pages/test/003_ContentImport.vue","mtime":1634651630993},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1633314931691},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1633314936594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9ndW5uL2NvZGVzcGFjZXMva2VlbWd1bm4td2ViLXYyLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2d1bm4vY29kZXNwYWNlcy9rZWVtZ3Vubi13ZWItdjItZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2d1bm4vY29kZXNwYWNlcy9rZWVtZ3Vubi13ZWItdjItZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwTXV0YXRpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGRlZmluZUFzeW5jQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKCmZ1bmN0aW9uIGxvYWQoX3gpIHsKICByZXR1cm4gX2xvYWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyBjb25zdCB0ZXN0RWxfQSA9IGRlZmluZUFzeW5jQ29tcG9uZW50KAovLyAgICgpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKLy8gICAgICAgcmVzb2x2ZShpbXBvcnQoJ0AvY29tcG9uZW50cy9lbGVtZW50cy90ZXN0RWxfQS52dWUnKSkKLy8gICAgICAgcmVqZWN0KHsgZXJyb3I6ICdlcnJvcid9KQovLyAgICAgfSkKLy8gKQoKCmZ1bmN0aW9uIF9sb2FkKCkgewogIF9sb2FkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGxpc3QpIHsKICAgIHZhciBsb2FkcywgX2l0ZXJhdG9yLCBfc3RlcCwgaXRlbTsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGxvYWRzID0ge307CiAgICAgICAgICAgIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGxpc3QpOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKCiAgICAgICAgICAgIF9pdGVyYXRvci5zKCk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBpZiAoKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgcmV0dXJuIGltcG9ydCgnQC9hc3NldHMvY29udGVudHMvY29tcER5bmFtaWNUZXN0Jyk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBsb2Fkc1tpdGVtXSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CgogICAgICAgICAgICBfaXRlcmF0b3IuZShfY29udGV4dC50MCk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwoKICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goMTYpOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGxvYWRzKTsKCiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTMsIDE2LCAxOV1dKTsKICB9KSk7CiAgcmV0dXJuIF9sb2FkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGxvYWREeW5hbWljQ29tcChjb21wTmFtZSkgewogIHJldHVybiBkZWZpbmVBc3luY0NvbXBvbmVudChmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gaW1wb3J0KCIuL2R5ZGlyMS8iICsgY29tcE5hbWUgKyAiLnZ1ZSIpOwogIH0pOwp9Cgp2YXIgbmFtZSA9ICd0ZXN0MDAzX2NvbnRlbnRfaW1wb3J0JzsKdmFyIGNvbXBvbmVudHMgPSB7fTsKY29tcG9uZW50cy50ZXN0RWxfQSA9IGxvYWREeW5hbWljQ29tcCgndGVzdEVsX0EnKTsKY29tcG9uZW50cy50ZXN0RWxfQiA9IGxvYWREeW5hbWljQ29tcCgndGVzdEVsX0InKTsKCmZ1bmN0aW9uIGRhdGEoKSB7CiAgcmV0dXJuIHsKICAgIEVsZW1lbnQ6IEVsZW1lbnQsCiAgICBtb2R1bGVzOiB7fQogIH07Cn0KCnZhciBwcm9wcyA9IHsKICB0ZXN0Q29udGVudDogT2JqZWN0LAogIGNsYXNzVGVzdE5hbWU6IFN0cmluZywKICBkeW5hbWljVGVzdDogU3RyaW5nCn07Cgp2YXIgY29tcHV0ZWQgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2dldEVOVicsICdnZXRWZW5kb3JVUkwnXSkpLCBtYXBHZXR0ZXJzKCd1aScsIFsnZ2V0RnJhbWVTaXplJywgJ2dldFNjYWxlJ10pKSwge30sIHsKICBzZWVNb2R1bGVzOiBmdW5jdGlvbiBzZWVNb2R1bGVzKCkgewogICAgcmV0dXJuIHRoaXMubW9kdWxlczsKICB9Cn0pOwoKdmFyIG1ldGhvZHMgPSBfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoJycsIFtdKSk7Cgp2YXIgd2F0Y2ggPSB7fTsKCmZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpIHt9CgpmdW5jdGlvbiBjcmVhdGVkKCkgewogIHZhciBfdGhpcyA9IHRoaXM7CgogIGNvbnNvbGUubG9nKCdjcmVhdGVkJyk7CiAgY29uc29sZS5sb2codGhpcy50ZXN0Q29udGVudCk7CiAgdGhpcy5FbGVtZW50ID0gdGhpcy50ZXN0Q29udGVudC50eXBlOwogIGxvYWQoWydjb21wQSddKS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgY29uc29sZS5sb2codmFsdWUpOwogICAgX3RoaXMubW9kdWxlcyA9IHZhbHVlOwogIH0pOwp9CgpmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHt9CgpmdW5jdGlvbiBtb3VudGVkKCkge30KCmZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHt9CgpmdW5jdGlvbiB1cGRhdGVkKCkge30KCmZ1bmN0aW9uIGJlZm9yZVVubW91bnQoKSB7fQoKZnVuY3Rpb24gdW5tb3VudGVkKCkge30KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBuYW1lLAogIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsCiAgZGF0YTogZGF0YSwKICBwcm9wczogcHJvcHMsCiAgY29tcHV0ZWQ6IGNvbXB1dGVkLAogIG1ldGhvZHM6IG1ldGhvZHMsCiAgd2F0Y2g6IHdhdGNoLAogIGJlZm9yZUNyZWF0ZTogYmVmb3JlQ3JlYXRlLAogIGNyZWF0ZWQ6IGNyZWF0ZWQsCiAgYmVmb3JlTW91bnQ6IGJlZm9yZU1vdW50LAogIG1vdW50ZWQ6IG1vdW50ZWQsCiAgYmVmb3JlVXBkYXRlOiBiZWZvcmVVcGRhdGUsCiAgdXBkYXRlZDogdXBkYXRlZCwKICBiZWZvcmVVbm1vdW50OiBiZWZvcmVVbm1vdW50LAogIHVubW91bnRlZDogdW5tb3VudGVkCn07"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/pages/test/003_ContentImport.vue"],"names":[],"mappings":"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","sourcesContent":["<template><div id=\"test003_content_import\">\n\n<div class=\"test-a\">\n  <div class=\"test-b\" :class=\"classTestName\">\n    <p class=\"typo-body1\">some content</p>\n  </div>\n</div>\n\n<p class=\"typo-body1\">{{seeModules.compA}}</p>\n\n\n<p class=\"typo-body1\">\n  testContent.type : {{ testContent.type }} <br>\n  Element : {{ Element }}\n</p>\n\n\n\n<component :is=\"Element\"></component>\n\n\n</div>\n</template>\n\n\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport { defineAsyncComponent } from 'vue';\n\nasync function load(list) {\n  const loads = {};\n  for (let item of list) {\n    loads[item] = await import('@/assets/contents/compDynamicTest');\n  }\n  return loads\n}\n\n// const testEl_A = defineAsyncComponent(\n//   () => new Promise((resolve, reject) => {\n//       resolve(import('@/components/elements/testEl_A.vue'))\n//       reject({ error: 'error'})\n//     })\n// )\n\nfunction loadDynamicComp(compName) {\n  return defineAsyncComponent(() =>\n    import(\"./dydir1/\" + compName + \".vue\")\n  )\n}\n\n\nconst name = 'test003_content_import';\n\nconst components = {};\ncomponents.testEl_A = loadDynamicComp('testEl_A');\ncomponents.testEl_B = loadDynamicComp('testEl_B');\n\nfunction data() { return {\n  Element,\n  modules : {},\n}}\n\nconst props = {\n  testContent : Object,\n  classTestName: String,\n  dynamicTest: String,\n};\n\nconst computed = {\n  ...mapGetters([ 'getENV', 'getVendorURL' ]),\n  ...mapGetters('ui',[\n    'getFrameSize',\n    'getScale'\n  ]),\n  seeModules() {\n    return this.modules\n  }\n};\n\nconst methods = {\n  ...mapMutations('', [  ]),\n};\n\nconst watch = {\n};\n\nfunction beforeCreate() {\n  }\n\n\n\n\n\n\nfunction created() {\n  console.log('created');\n  console.log(this.testContent);\n\n\n  this.Element = this.testContent.type;\n\n  load(['compA']).then( (value) => {\n    console.log(value)\n    this.modules = value;\n  })\n\n\n}\n\nfunction beforeMount() {\n}\n\n\nfunction mounted() {\n}\n\n\nfunction beforeUpdate() {\n}\n\n\nfunction updated() {\n}\n\n\nfunction beforeUnmount() {\n}\n\n\nfunction unmounted() {\n}\n\n\nexport default {\n  name, components, \n  data, props, computed, \n  methods, \n  watch, \n  beforeCreate, created, \n  beforeMount, mounted, \n  beforeUpdate, updated, \n  beforeUnmount, unmounted\n}\n</script>"],"sourceRoot":""}]}