{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/nav_bar/btn_darkmode.vue?vue&type=template&id=15f14e28","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/nav_bar/btn_darkmode.vue","mtime":1634534041522},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1633314931691},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1633314936599},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1633314936594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBpZDogIm1vZGUtYnRuIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0ljb25Nb2RlTm9ybWFsID0gX3Jlc29sdmVDb21wb25lbnQoIkljb25Nb2RlTm9ybWFsIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9JY29uTW9kZU5vcm1hbCwgewogICAgb25DbGljazogJG9wdGlvbnMudG9nZ2xlQ29sb3JTY2hlbWUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25DbGljayJdKV0pOwp9"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/components/elements/nav_bar/btn_darkmode.vue"],"names":[],"mappings":";;AACK,EAAA,EAAE,EAAC;;;;;uBAAR,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAFJ,YAAA,CAA4C,yBAA5C,EAA4C;AAA3B,IAAA,OAAK,EAAE,QAAA,CAAA;AAAoB,GAA5C,EAAyC,IAAzC,EAAyC;AAAA;AAAzC,IAAyC,CAAA,SAAA,CAAzC,CAEI,CAJN,C","sourcesContent":["<template>\n<div id=\"mode-btn\">\n\n  <IconModeNormal @click=\"toggleColorScheme\"/>\n\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport IconModeNormal from '@/assets/icons/icon_mode_normal.vue';\n\nexport default {\n  name: 'btn_darkmode',\n  components: { IconModeNormal },\n  data() { return {\n    colorSchemeOverride : false\n  }},\n  props: {\n  },\n  computed: {\n    ...mapGetters('ui', [ 'isDarkmodeOn' ]),\n  },\n  methods: {\n    ...mapMutations('ui', [ 'toggleDarkmode' ]),\n    toggleColorScheme() {\n      if (this.colorSchemeOverride) {\n        document.body.className = 'preferred-color'\n      } else {\n        document.body.className = 'inverted-color'\n      }\n      this.toggleDarkmode();\n      this.colorSchemeOverride = !this.colorSchemeOverride;\n    }\n  },\n}\n</script>"],"sourceRoot":""}]}