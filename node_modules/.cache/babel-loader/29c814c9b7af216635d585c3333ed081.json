{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","mtime":1633258677787},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1632469346062},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1632469346329},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js","mtime":1632469345994}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGNvbG9ycyBmcm9tICdAL2Fzc2V0cy9zdHlsZXMvY29sb3JzLmpzb24nOyAvLyBEYXJrIE1vZGUgRGV0ZWN0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKdmFyIG1hdGNoZWQgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXM7CnZhciBzdGFydE1vZGUgPSBtYXRjaGVkOwpjb25zb2xlLmxvZygidWktY29sb3JzIik7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiBmYWxzZSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBkYXJrbW9kZTogc3RhcnRNb2RlLAogICAgICBjb2xvclNvdXJjZTogY29sb3JzLAogICAgICB0aGVtZUNvbG9yOiAnIzAwMDAwMCcKICAgIH07CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBpc0Rhcmttb2RlT246IGZ1bmN0aW9uIGlzRGFya21vZGVPbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGFya21vZGU7CiAgICB9LAogICAgZ2V0Q29sb3JzOiBmdW5jdGlvbiBnZXRDb2xvcnMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRhcmttb2RlID8gc3RhdGUuY29sb3JTb3VyY2UuZGFyayA6IHN0YXRlLmNvbG9yU291cmNlLmxpZ2h0OwogICAgfSwKICAgIGdldFRoZW1lQ29sb3I6IGZ1bmN0aW9uIGdldFRoZW1lQ29sb3Ioc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlW3N0YXRlLmRhcmttb2RlID8gJ2RhcmsnIDogJ2xpZ2h0J11bJy0taTk0J107CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHRvZ2dsZURhcmttb2RlOiBmdW5jdGlvbiB0b2dnbGVEYXJrbW9kZShzdGF0ZSkgewogICAgICBzdGF0ZS5kYXJrbW9kZSA9ICFzdGF0ZS5kYXJrbW9kZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js"],"names":["colors","matched","window","matchMedia","matches","startMode","console","log","namespaced","state","darkmode","colorSource","themeColor","getters","isDarkmodeOn","getColors","dark","light","getThemeColor","mutations","toggleDarkmode"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,6BAAnB,C,CAEA;;AACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAhE;AACA,IAAIC,SAAS,GAAGJ,OAAhB;AACAK,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,KADC;AAGbC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,QAAQ,EAAEL,SADE;AAEZM,MAAAA,WAAW,EAAEX,MAFD;AAGZY,MAAAA,UAAU,EAAE;AAHA,KAAP;AAAA,GAHM;AASbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACML,KADN,EACa;AAClB,aAAOA,KAAK,CAACC,QAAb;AACD,KAHM;AAIPK,IAAAA,SAJO,qBAIGN,KAJH,EAIU;AACf,aAAOA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACE,WAAN,CAAkBK,IAAnC,GAA0CP,KAAK,CAACE,WAAN,CAAkBM,KAAnE;AACD,KANM;AAOPC,IAAAA,aAPO,yBAOOT,KAPP,EAOc;AACnB,aAAOA,KAAK,CAACA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,OAA3B,CAAL,CAAyC,OAAzC,CAAP;AACD;AATM,GATI;AAqBbS,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMX,KADN,EACa;AACpBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,CAACD,KAAK,CAACC,QAAxB;AACD;AAHQ;AArBE,CAAf","sourcesContent":["import colors from '@/assets/styles/colors.json';\n\n// Dark Mode Detection ------------------------\nlet matched = window.matchMedia('(prefers-color-scheme: dark)').matches;\nlet startMode = matched;\nconsole.log(\"ui-colors\");\n\nexport default {\n  namespaced: false,\n  \n  state: () => ({\n    darkmode: startMode,\n    colorSource: colors,\n    themeColor: '#000000'\n  }),\n\n  getters: {\n    isDarkmodeOn(state) {\n      return state.darkmode\n    },\n    getColors(state) {\n      return state.darkmode ? state.colorSource.dark : state.colorSource.light\n    },\n    getThemeColor(state) {\n      return state[state.darkmode ? 'dark' : 'light']['--i94']\n    }\n  },\n\n  mutations: {\n    toggleDarkmode(state) {\n      state.darkmode = !state.darkmode\n    }\n  },\n\n}"]}]}