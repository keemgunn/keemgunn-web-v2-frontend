{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/main.js","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/main.js","mtime":1634523536850},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1633314931691},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js","mtime":1633314933310}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICIvVXNlcnMvZ3Vubi9jb2Rlc3BhY2VzL2tlZW1ndW5uLXdlYi12Mi1mcm9udGVuZC9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICIvVXNlcnMvZ3Vubi9jb2Rlc3BhY2VzL2tlZW1ndW5uLXdlYi12Mi1mcm9udGVuZC9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgIi9Vc2Vycy9ndW5uL2NvZGVzcGFjZXMva2VlbWd1bm4td2ViLXYyLWZyb250ZW5kL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiL1VzZXJzL2d1bm4vY29kZXNwYWNlcy9rZWVtZ3Vubi13ZWItdjItZnJvbnRlbmQvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmZpbmFsbHkuanMiOwppbXBvcnQgeyBjcmVhdGVBcHAgfSBmcm9tICd2dWUnOwppbXBvcnQgQXBwIGZyb20gJ0AvQXBwLnZ1ZSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlL3N0b3JlJzsKaW1wb3J0IHJvdXRlciBmcm9tICdAL3JvdXRlcic7CmltcG9ydCBMb2FkU2NyaXB0IGZyb20gInZ1ZS1wbHVnaW4tbG9hZC1zY3JpcHQiOyAvLyBJTVBPUlQgR0xPQkFMIE1FVEhPRFMgLS0tLS0tLS0tLS0tLS0tLQoKaW1wb3J0IHsgbG9nZyB9IGZyb20gJ0AvZnVuY3Rpb25zL2xvZ2dlcic7CnZhciBhcHAgPSBjcmVhdGVBcHAoQXBwKTsKYXBwLnVzZShzdG9yZSkudXNlKHJvdXRlcikudXNlKExvYWRTY3JpcHQpOwphcHAuY29uZmlnLmdsb2JhbFByb3BlcnRpZXMuJGVudklzRGV2ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT0gJ2RldmVsb3BtZW50JzsKYXBwLmNvbmZpZy5nbG9iYWxQcm9wZXJ0aWVzLiRsb2dnID0gbG9nZzsKYXBwLm1vdW50KCIjYXBwIik7"},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/main.js"],"names":["createApp","App","store","router","LoadScript","logg","app","use","config","globalProperties","$envIsDev","process","env","NODE_ENV","$logg","mount"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AAGA,IAAMC,GAAG,GAAGN,SAAS,CAACC,GAAD,CAArB;AAEAK,GAAG,CAACC,GAAJ,CAAQL,KAAR,EACGK,GADH,CACOJ,MADP,EAEGI,GAFH,CAEOH,UAFP;AAIAE,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4BC,SAA5B,GAAwCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAAhE;AACAP,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4BK,KAA5B,GAAoCT,IAApC;AAGAC,GAAG,CAACS,KAAJ,CAAU,MAAV","sourcesContent":["import { createApp } from 'vue';\nimport App from '@/App.vue';\nimport store from '@/store/store';\nimport router from '@/router';\nimport LoadScript from \"vue-plugin-load-script\";\n\n// IMPORT GLOBAL METHODS ----------------\nimport { logg } from '@/functions/logger';\n\n\nconst app = createApp(App)\n  \napp.use(store)\n  .use(router)\n  .use(LoadScript);\n\napp.config.globalProperties.$envIsDev = process.env.NODE_ENV == 'development';\napp.config.globalProperties.$logg = logg;\n\n\napp.mount(\"#app\");"]}]}