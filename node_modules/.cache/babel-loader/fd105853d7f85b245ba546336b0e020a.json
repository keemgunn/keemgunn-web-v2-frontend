{"remainingRequest":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js!/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","dependencies":[{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js","mtime":1634396892817},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633314931844},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/babel-loader/lib/index.js","mtime":1633314931691},{"path":"/Users/gunn/codespaces/keemgunn-web-v2-frontend/node_modules/eslint-loader/index.js","mtime":1633314933310}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQ29sb3IgUGFsZXR0ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KaW1wb3J0IGNvbG9ycyBmcm9tICdAL2Fzc2V0cy9zdHlsZXMvY29sb3JzLmpzb24nOyAvLyBVSSBmdW5jdGlvbnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKZnVuY3Rpb24gc2V0Qm9keVN0eWxlKGRvY3VtZW50LCBiYWNrZ3JvdW5kQ29sb3IpIHsKICBkb2N1bWVudC5ib2R5LnN0eWxlID0gImJhY2tncm91bmQtY29sb3I6ICIuY29uY2F0KGJhY2tncm91bmRDb2xvciwgIjsgcGFkZGluZzogMHB4OyBtYXJnaW46IDBweDsgbWFyZ2luLXRvcDogMHB4OyBoZWlnaHQ6IDEwMHZoOyB3aWR0aDogMTAwdnc7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsiKTsKfSAvLyBEYXJrIE1vZGUgRGV0ZWN0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCnZhciBzdGFydE1vZGUgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXM7CnZhciBzdGFydFRoZW1lQ29sb3IgPSBzdGFydE1vZGUgPyBjb2xvcnMuZGFya1snLS1pOTQnXSA6IGNvbG9ycy5saWdodFsnLS1pOTQnXTsKc2V0Qm9keVN0eWxlKGRvY3VtZW50LCBzdGFydFRoZW1lQ29sb3IpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogZmFsc2UsCiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIHsKICAgICAgZGFya21vZGU6IHN0YXJ0TW9kZSwKICAgICAgbGlnaHQ6IGNvbG9ycy5saWdodCwKICAgICAgZGFyazogY29sb3JzLmRhcmssCiAgICAgIHRoZW1lQ29sb3I6IHN0YXJ0VGhlbWVDb2xvcgogICAgfTsKICB9LAogIGdldHRlcnM6IHsKICAgIGlzRGFya21vZGVPbjogZnVuY3Rpb24gaXNEYXJrbW9kZU9uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYXJrbW9kZTsKICAgIH0sCiAgICBnZXRDb2xvcnM6IGZ1bmN0aW9uIGdldENvbG9ycyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGFya21vZGUgPyBzdGF0ZS5kYXJrIDogc3RhdGUubGlnaHQ7CiAgICB9LAogICAgZ2V0VGhlbWVDb2xvcjogZnVuY3Rpb24gZ2V0VGhlbWVDb2xvcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudGhlbWVDb2xvcjsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgdG9nZ2xlRGFya21vZGU6IGZ1bmN0aW9uIHRvZ2dsZURhcmttb2RlKHN0YXRlKSB7CiAgICAgIHN0YXRlLmRhcmttb2RlID0gIXN0YXRlLmRhcmttb2RlOwogICAgICBzdGF0ZS50aGVtZUNvbG9yID0gc3RhdGUuZGFya21vZGUgPyBzdGF0ZS5kYXJrWyctLWk5NCddIDogc3RhdGUubGlnaHRbJy0taTk0J107CiAgICAgIHNldEJvZHlTdHlsZShkb2N1bWVudCwgc3RhdGUudGhlbWVDb2xvcik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/gunn/codespaces/keemgunn-web-v2-frontend/src/store/ui/ui-colors.js"],"names":["colors","setBodyStyle","document","backgroundColor","body","style","startMode","window","matchMedia","matches","startThemeColor","dark","light","namespaced","state","darkmode","themeColor","getters","isDarkmodeOn","getColors","getThemeColor","mutations","toggleDarkmode"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,6BAAnB,C,CAGA;;AACA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,eAAhC,EAAiD;AAC/CD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAd,+BAA2CF,eAA3C;AACD,C,CAGD;;;AACA,IAAIG,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAlE;AACA,IAAIC,eAAe,GAAGJ,SAAS,GAAGN,MAAM,CAACW,IAAP,CAAY,OAAZ,CAAH,GAA0BX,MAAM,CAACY,KAAP,CAAa,OAAb,CAAzD;AACAX,YAAY,CAACC,QAAD,EAAWQ,eAAX,CAAZ;AAGA,eAAe;AACbG,EAAAA,UAAU,EAAE,KADC;AAGbC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,QAAQ,EAAET,SADE;AAEZM,MAAAA,KAAK,EAAEZ,MAAM,CAACY,KAFF;AAGZD,MAAAA,IAAI,EAAEX,MAAM,CAACW,IAHD;AAIZK,MAAAA,UAAU,EAAEN;AAJA,KAAP;AAAA,GAHM;AAUbO,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMJ,KADN,EACa;AAClB,aAAOA,KAAK,CAACC,QAAb;AACD,KAHM;AAIPI,IAAAA,SAJO,qBAIGL,KAJH,EAIU;AACf,aAAOA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACH,IAAvB,GAA8BG,KAAK,CAACF,KAA3C;AACD,KANM;AAOPQ,IAAAA,aAPO,yBAOON,KAPP,EAOc;AACnB,aAAOA,KAAK,CAACE,UAAb;AACD;AATM,GAVI;AAsBbK,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMR,KADN,EACa;AACpBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,CAACD,KAAK,CAACC,QAAxB;AACAD,MAAAA,KAAK,CAACE,UAAN,GAAmBF,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACH,IAAN,CAAW,OAAX,CAAjB,GAAuCG,KAAK,CAACF,KAAN,CAAY,OAAZ,CAA1D;AACAX,MAAAA,YAAY,CAACC,QAAD,EAAWY,KAAK,CAACE,UAAjB,CAAZ;AACD;AALQ;AAtBE,CAAf","sourcesContent":["// Color Palette ------------------------------\nimport colors from '@/assets/styles/colors.json';\n\n\n// UI functions -------------------------------\nfunction setBodyStyle(document, backgroundColor) {\n  document.body.style = `background-color: ${backgroundColor}; padding: 0px; margin: 0px; margin-top: 0px; height: 100vh; width: 100vw; -webkit-text-size-adjust: 100%;`\n}\n\n\n// Dark Mode Detection ------------------------\nlet startMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\nlet startThemeColor = startMode ? colors.dark['--i94'] : colors.light['--i94']\nsetBodyStyle(document, startThemeColor)\n\n\nexport default {\n  namespaced: false,\n  \n  state: () => ({\n    darkmode: startMode, \n    light: colors.light,\n    dark: colors.dark,\n    themeColor: startThemeColor,\n  }),\n\n  getters: {\n    isDarkmodeOn(state) {\n      return state.darkmode\n    },\n    getColors(state) {\n      return state.darkmode ? state.dark : state.light\n    },\n    getThemeColor(state) {\n      return state.themeColor\n    }\n  },\n\n  mutations: {\n    toggleDarkmode(state) {\n      state.darkmode = !state.darkmode\n      state.themeColor = state.darkmode ? state.dark['--i94'] : state.light['--i94']\n      setBodyStyle(document, state.themeColor)\n    }\n  },\n\n}"]}]}